name: 'User Management'
description: |-

  APIs for managing users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 60 characters. Must be at least 5 characters.'
        required: true
        example: qjbkqlvkjgwnlyvkipbrttdmteutgxfovjdjhqxlcysydquaqxwygcpshtybih
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: mona.feest@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Must match the regex /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$/. Must not be greater than 16 characters. Must be at least 8 characters.'
        required: true
        example: 'tjxu/g+>MjC!7Q]$'
        type: string
        custom: []
    cleanBodyParameters:
      name: qjbkqlvkjgwnlyvkipbrttdmteutgxfovjdjhqxlcysydquaqxwygcpshtybih
      email: mona.feest@example.com
      password: 'tjxu/g+>MjC!7Q]$'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'check if user is authenticated'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: beatae
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: magni
        type: string
        custom: []
    cleanBodyParameters:
      email: beatae
      password: magni
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/getAuthUser
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified resource.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/getAll
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the list of users'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/update
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: api/delete
    metadata:
      groupName: 'User Management'
      groupDescription: |-

        APIs for managing users
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
